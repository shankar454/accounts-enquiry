<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <spring:beans>
        <spring:import resource="classpath:api.xml" />
        <spring:import resource="classpath:app-demo-config.xml" />
    </spring:beans>
    <munit:config mock-connectors="false" mock-inbounds="false" doc:name="MUnit configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8081" basePath="/api" doc:name="HTTP Request Configuration"/>
    <munit:test name="get:/restaurents:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/restaurents:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="zip" value="60661"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200"/>


    </munit:test>
    <munit:test name="get:/restaurents:api-config-500-application/json-FlowTest" description="Verifying functionality of [get:/restaurents:api-config-500-application/json]" ignore="true">
       
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
            <http:success-status-code-validator values="500" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(500))]" doc:name="assert that - http.status eq 500" />

    </munit:test>
    <munit:test name="get:/restaurents:api-config-400-application/json-FlowTest" description="Verifying functionality of [get:/restaurents:api-config-400-application/json]" ignore="true">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
            <http:success-status-code-validator values="400" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(400))]" doc:name="assert that - http.status eq 400" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_400_restaurents_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/restaurents:api-config-401-application/json-FlowTest" description="Verifying functionality of [get:/restaurents:api-config-401-application/json]" ignore="true">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
            </http:request-builder>
            <http:success-status-code-validator values="401" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(401))]" doc:name="assert that - http.status eq 401" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_401_restaurents_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/restaurents:api-config-403-application/json-FlowTest" description="Verifying functionality of [get:/restaurents:api-config-403-application/json]" ignore="true">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
            </http:request-builder>
            <http:success-status-code-validator values="403" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(403))]" doc:name="assert that - http.status eq 403" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_403_restaurents_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/restaurents/storeId/order/orderId:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/restaurents/storeId/order/orderId:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents/{storeId}/order/{orderId}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="storeId" value="1201"/>
                <http:uri-param paramName="orderId" value="c532a110-5151-46a8-8f64-d8e8edb6f415"/>
                <http:header headerName="Accept" value="application/json"/>


            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>

    </munit:test>
    <munit:test name="get:/restaurents/storeId:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/restaurents/storeId:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/restaurents/{storeId}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="storeId" value="1201"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-not-null message="oops !!" doc:name="Assert Not Null Payload"/>

    </munit:test>
    <munit:test name="post:/restaurents/storeId/order:application/json:api-config-201-application/json-FlowTest" description="Verifying functionality of [post:/restaurents/storeId/order:application/json:api-config-201-application/json]">
        <set-payload value="#[getResource('scaffolder/request/post_restaurents_{storeid}_order_application_json.json').asString()]" doc:name="Set Payload"/>
        <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/restaurents/{storeId}/order" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="storeId" value="1201"/>
                <http:header headerName="Accept" value="application/json"/>
                <http:header headerName="Content-Type" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(201))]" doc:name="assert that - http.status eq 201" />

    </munit:test>
</mule>
